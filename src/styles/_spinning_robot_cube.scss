$cube-size: 65px;
$cube-transform: $cube-size/2;
$robot-size: $cube-size * 0.5;

// Spin and then return to 0
@keyframes spin {
  0%,
  10% {
    transform: rotateY(0);
  }

  20% {
    transform: rotateY(95deg);
  }
  21% {
    transform: rotateY(85deg);
  }
  22% {
    transform: rotateY(93deg);
  }
  23% {
    transform: rotateY(87deg);
  }
  25%,
  28% {
    transform: rotateY(90deg);
  }

  38% {
    transform: rotateY(185deg);
  }
  39% {
    transform: rotateY(175deg);
  }
  40% {
    transform: rotateY(183deg);
  }
  41% {
    transform: rotateY(177deg);
  }
  43%,
  46% {
    transform: rotateY(180deg);
  }

  56% {
    transform: rotateY(275deg);
  }
  57% {
    transform: rotateY(265deg);
  }
  58% {
    transform: rotateY(273deg);
  }
  59% {
    transform: rotateY(267deg);
  }
  61%,
  64% {
    transform: rotateY(270deg);
  }

  74%,
  100% {
    transform: rotateY(0deg);
  }
}

.cube-container {
  display: inline-block;
  vertical-align: top;
  perspective: 1100px;
  perspective-origin: 50% 100px;

  .cube {
    position: relative;
    width: $cube-size;
    margin: 0 auto;
    transform-style: preserve-3d;

    animation: spin 5s infinite linear;
    animation-timing-function: cubic-bezier(0.39, -0.34, 0.52, 1.5);
    animation-iteration-count: 5;

    .side {
      position: absolute;
      width: $cube-size;
      height: $cube-size;
      background: gray;
      box-sizing: border-box;
      border: 4px solid white;

      box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.8),
        inset 0 2px 0 rgba(255, 255, 255, 0.5),
        inset 0 -1px 0 rgba(0, 0, 0, 0.4);

      p {
        @include catamaran-font(400);
        margin: 0;
        margin-top: 4px;
      }
    }
  }
}

#front {
  transform: translateZ($cube-transform);
  @include build-robot($robot-size, $color-5);
}

#left {
  transform: rotateY(270deg) translateX(-$cube-transform);
  transform-origin: center left;
  @include build-robot($robot-size, $color-3);
  .robot-head {
    .mouth:after {
      border-color: blue;
      transform: rotateZ(-13deg);
    }
  }
}

#back {
  transform: translateZ(-$cube-transform) rotateY(180deg);
  @include build-robot($robot-size, $color-4);
  .robot-head {
    .mouth:after {
      border-color: lightseagreen;
    }
  }
}

#right {
  transform: rotateY(-270deg) translateX($cube-transform);
  transform-origin: top right;
  @include build-robot($robot-size, $color-5);
  .robot-head {
    .mouth:after {
      border-color: green;
      transform: rotateZ(13deg);
    }
  }
}
