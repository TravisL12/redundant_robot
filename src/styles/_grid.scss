@mixin set-animation($degree) {
  0%,
  100% {
    transform: rotate3d(0, 1, 0, 0deg);
  }
  25% {
    transform: rotate3d(0, 1, 0, $degree);
  }
  75% {
    transform: rotate3d(0, 1, 0, -$degree);
  }
}

@mixin build-animation($animation) {
  animation-name: $animation;
  animation-duration: 2s;
  animation-iteration-count: 1;
}

$square-dimension: 35px;
$check-color: #c4eeff;
$check-color-2: white;
#square-grid {
  position: fixed;
  z-index: -1;
  top: -20px;
  left: -20px;
}

.row {
  margin-top: 1px;
  padding: 0;
  list-style: none;
  height: $square-dimension;
  white-space: nowrap;
  &:nth-child(even) .column {
    &:nth-child(even) .inner-col {
      background: $check-color;
    }
    &:nth-child(odd) .inner-col {
      background: $check-color-2;
    }
  }
  &:nth-child(odd) .column {
    &:nth-child(even) .inner-col {
      background: $check-color-2;
    }
    &:nth-child(odd) .inner-col {
      background: $check-color;
    }
  }

  .column {
    display: inline-block;
    perspective: 100px;
    width: $square-dimension;
    height: 100%;
    box-sizing: border-box;
    margin-left: 1px;
    background: black;
    transition: 0.5s linear background;

    .inner-col {
      display: inline-block;
      border-radius: inherit;
      width: 100%;
      height: 100%;
      transform-style: preserve-3d;
      transition: all 1s linear;

      @for $i from 3 through 8 {
        $i: $i * 10;
        &.rotate-#{$i} {
          @include build-animation(rotate-square-#{$i});
        }
      }
    }
  }
}

.red {
  background: red;
}
.green {
  background: green;
}
.blue {
  background: blue;
}
.pink {
  background: pink;
}
.yellow {
  background: yellow;
}

@for $i from 3 through 8 {
  $i: $i * 10;
  @keyframes rotate-square-#{$i} {
    @include set-animation(#{$i}deg);
  }
}
